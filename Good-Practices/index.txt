what is Good Practices --->

1. comment all the functions and logics in javascript and in html each parent child class properly defind.
2. reduce the number of lines of codes within 200 - 300 lines.
3. Format document (indentation)
4. follow the proper heirarchy of the folder structure.
5. Remove all the console.log() from the code.
6. Remove all the unused variables.
7. try to use ES6 syntaxes.
8. add 5 words comment in each functionality.
9. Use proper naming conventions


`````````````````````````````````````````````````


# concept of Immutable and mutable in javascript

1. Immutable - strings are immutable. Inorder to access the character at an index we use the following syntax.


`````````````````````````````````````````````````


let str = "Hello";
let str2 = "Lomhee";

console.log(str[0]);    ---> H
console.log(str[1]);    ---> e
console.log(str2[0]);   ---> L

can not change the string like that   ---->

str[2] = 'r'


`````````````````````````````````````````````````


2. Mutable - arrays are mutable. It can br change.

let array = [23, 34 ,22, 78, 67, "food", "alright", false]
console.log(array);      // [23, 34 ,22, 78, 67, "food", "alright", false]
array[2] = 100;          // changed the value 
console.log(array);      // [23, 34 ,100, 78, 67, "food", "alright", false]


``````````````````````````````````````````````````


3. difference between undefined and not defined

    =>  not defined means the thing that does not exist
    =>  underfined means the thing that exist but not defined yet


```````````````````````````````````````````````````````````````


4. Execuation Context and Lexical Environment

Execuation Context : - execution Context means function created the imaginary container when we run the function there are 3 things happen at that moment

a. variablesb.
b. funtion inside the parent function 
c. Lexical environment of the function 

=> that imaginary container is called execution context.

funtion vs(){
    var a = 12;
    funtion def(){
        var b = 23; 
    }
}

-> so here in that imaginary container (a, def and lexical environment) will be present. 
-> b variable can not use fucntion vs that is called lexical environment. it can access parents things but not of childrens. 

-------------------------------------------------------------------------------------------------

USE STRICT -

The directive looks like a string: "use strict" or 'use strict'. When it is located at the top of a script,
the whole script works the “modern” way.
Please make sure that "use strict" is at the top of your scripts, otherwise strict mode may not be enabled.
Strict mode isn’t enabled here:

-----------------------------------------------------------------------------------------------------------

WHAT UIS STATEMENT AND EXPRESSIONS -

EXPRESSIONS - THAT EVALUATE THE VALUE OR RETURNS ANY VALUE CALLED EXPRESSIONS

STATEMENT - THAT ARE NOT RETURNS ANY VALUE CALLED STATEMENT.

-------------------------------------------------------------------------------------------------------------

OPERATOR PRECEDENCE -

=> Expressions in parentheses are computed before the rest of the expression.
   Function are executed before the result is used in the rest of the expression.

   https://www.w3schools.com/js/js_precedence.asp

---------------------------------------------------------------------------------------------------------------

