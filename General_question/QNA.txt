// what is JS?
/* Javascript is a language that is used to communicate with the computer like we talk to each other in hindi and other languages. 
Javascript is used to create dynamic websites and web applications  */

// Hoisting      output - 5
// x = 5;
// console.log(x);
// var x;

// // another way    output - 5
// z = 5;
// var z ;
// console.log(z);


Hoisting -
In JavaScript, a variable can be declared after it has been used.
In other words; a variable can be used before it has been declared.

// Hoisting         output - undefined
// console.log(y)
// var y = 5;

// Hoisting         output - error = Can not access 'y' before initialization
// console.log(y);    error - because it come in the TDZ temporal dead zone
// let y = 5;

// Hoisting         output - error = Can not access 'y' before initialization
// console.log(y)     error - because it come in the TDZ temporal dead zone
// const y = 5;


/* ANONYMOUS FUNCTION */
// The definition of the term "anonymous" is "unknown or without identification." An anonymous function in JavaScript is function 
// that has no name, or more precisely, one that lacks a name.An anonymous function has no identification when it is created.

var greet = function () {
    console.log("Welcome to Board Infinity!");
};
greet();


3. difference between undefined and not defined
// =>  not defined means the thing that does not exist
// =>  underfined means the thing that exist but not defined yet


// difference between object and array
// Array :- each element is accessed using its numerical index (starting from 0).

// objects :- An object stores data or holds data in key-value pairs, where each key (a unique identifier) is associated with a value.

// during the calculation the data store in called heap memory - HEAP MEMORY

=> Truthy and Falsy values
5 falsy values: 0, '', undefined, null, NaN, false, document.all rest of these all the truthy values

=> do-while used when at least one time you want to run the code(Loop)

----------------------------------------------------------------------------------------------------


default parameter -
=> When no value is passed in the function definition, 
   a default value is being set for the function definition, known as the default parameter.

----------------------------------------------------------------------------------------------------------

There are 2 phases in JS -
=> creation and execution
creation - variable declared
execution - funciton execution and variable assigning and execution

----------------------------------------------------------------------------------------------------------

Fully Hoisted -

Function declarations are fully hoisted in JavaScript. This means you can call the function before
it appears in the code because the entire function definition is moved to the top of its scope.

console.log(sayHello()); // Output: "Hello!"

function sayHello() {
  return "Hello!";
}


Partial Hoisted -

Variables declared with var are partially hoisted. Only the declaration is hoisted, not the initialization. 
This means the variable is created at the top of its scope with an initial value of undefined, but the assignment 
happens where it appears in the code.

console.log(myVar); // Output: undefined
var myVar = 5;
console.log(myVar); // Output: 5


-------------------------------------------------------------------------------------------------------------------------